package com.example.ioc;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.ApplicationEventPublisher;
import org.springframework.context.annotation.Profile;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

@Component("saludaEs")
//@Qualifier("es")
@Scope("prototype")
@Profile("es")
public class SaludaImpl implements Saluda {
	
	public static class SaludaEvento{
		private String tipo;
		private String destination;
		public SaludaEvento(String tipo, String destination) {
			super();
			this.tipo = tipo;
			this.destination = destination;
		}
	
		public String tipo() {
			return tipo;
		}
		public String destination() {
			return destination;
		}
		
	}
	
	public static record SaludaEvento(String tipo, String destination) {
		
	}
	
	private ApplicationEventPublisher publisher;
	
	private Entorno entorno;
	
	public SaludaImpl(Entorno entorno) {
		this.entorno = entorno;
	}

	@Override
	public void saluda(String nombre) {
		entorno.write("Hola " + nombre);
	}

	@Override
	public int getContador() {
		return entorno.getContador();
	}
	
	public Optional<Entorno>getEntorno(){
		return Optional.ofNullable(entorno);
	}

}
