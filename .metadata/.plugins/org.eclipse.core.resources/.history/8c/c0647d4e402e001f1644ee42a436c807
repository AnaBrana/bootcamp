package com.example;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

@DisplayName("Pruebas de la clase Calculadora")
class CalculadoraTest {
	Calculadora calculadora;

	@BeforeAll
	static void setUpBeforeClass() throws Exception {
	}

	@AfterAll
	static void tearDownAfterClass() throws Exception {
	}

	@BeforeEach
	void setUp() throws Exception {
		calculadora= new Calculadora();
	}

	@AfterEach
	void tearDown() throws Exception {
	}
	
	@Nested
	@DisplayName("Metodo Add")
	class Add{
		@Nested
		class OK{
			//@Test
			@DisplayName("Suma de dos enteros")
			@Parameterized("Caso {index}: {0} + {1} = {2}")
			@CsvSource(value= {"1,2,3"})
			void testAdd(double operando1, double operando2, double resultado) {
				
				assertEquals(3, calculadora.add(1, 2));
				/*assertEquals(3, calculadora.add(4, -1),"caso 4,-1");
				assertEquals(3, calculadora.add(-1, -1),"caso -1,-1");
				assertEquals(3, calculadora.add(0, 0),"caso 0, 0");*/
			}
			@Test
			@DisplayName("Suma de dos reales")
			void testAdd2() {
				
				assertEquals(0.3, calculadora.add(0.1, 0.2));
			}
		}
		@Nested
		class KO{
			
		}
	}
	
	@Nested
	class Div{
		@Nested
		class OK{
			@Test
			@DisplayName("División de dos enteros")
			void testDivInt() {
				
				assertEquals(1,calculadora.div(3, 2));
			}
			@Test
			@DisplayName("División de dos reales")
			void testDivRealOK() {
				
				assertEquals(1.5, calculadora.div(3.0, 2.0));
			}
		}
		@Nested
		class KO{

			@Test
			@DisplayName("División por 0")
			void testDivRealKO() {
				
				assertThrows(ArithmeticException.class, () -> calculadora.div(3.0, 0));
			}

		}
	}
	
	
	
	

	
	
}
